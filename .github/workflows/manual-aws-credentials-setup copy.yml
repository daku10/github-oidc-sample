name: Manual AWS Credentials Setup

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: test
    steps:
      - name: Configure AWS
        env:
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
        run: |
          export AWS_ROLE_ARN="arn:aws:iam::${ACCOUNT_ID}:role/github_actions_role"
          export WEB_IDENTITY_TOKEN_FILE=/tmp/awscreds
          export AWS_DEFAULT_REGION=ap-northeast-1
          echo WEB_IDENTITY_TOKEN_FILE=$WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
          echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
          echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV
          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $WEB_IDENTITY_TOKEN_FILE
      - run: |
          WEB_IDENTITY_TOKEN=$(cat $WEB_IDENTITY_TOKEN_FILE)
          CREDENTIALS=$(aws sts assume-role-with-web-identity --role-arn ${AWS_ROLE_ARN} --role-session-name MySessionName --web-identity-token ${WEB_IDENTITY_TOKEN})
          export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.Credentials.SessionToken')
          echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> $GITHUB_ENV
          echo AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY >>$GITHUB_ENV
          echo AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN >> $GITHUB_ENV
      - run: aws sts get-caller-identity
      - run: aws ec2 describe-instances
